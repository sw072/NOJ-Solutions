#include "iostream"
using namespace std;

int num;
int map[101][101];

int Dijkstra(int Edge[101][101],int nStart,int nDest,int Path[])
{
    int MinDis[101];                            //????????????????????????
    bool InS2[101];                            //??????????????S2??
    //??????
    int i;
    for(i=0;i<num;i++)
        InS2[i]=true;
    InS2[nStart]=false;                        //????????????nStart??S1??????????S2??
    for(i=0;i<num;i++)
    {
        MinDis[i]=Edge[nStart][i];
        if(Edge[nStart][i]<INT_MAX)
            Path[i]=nStart;                    //????????????????
        else
            Path[i]=-1;                        //????????????????
    }

    //????????
    while(InS2[nDest])                        //??nDest????S2????????
    {
        //????S2????????????????????????
        int nMinLen=INT_MAX;
        int nPoint=-1;
        for(i=0;i<num;i++)
            if((InS2[i]) && (MinDis[i]<nMinLen))
            {
                nMinLen=MinDis[i];
                nPoint=i;
            }

        if(nMinLen==INT_MAX)
            break;
        //????S2??MinDis
        InS2[nPoint]=false;                                    //????????S2????S1
        for(i=0;i<num;i++)
            if((InS2[i]) && Edge[nPoint][i]<INT_MAX)    //??????S2??????   ??????????????
            {
                int nNewLen=nMinLen+Edge[nPoint][i];
                if(nNewLen<MinDis[i])            //????????????
                {
                    Path[i]=nPoint;                //????????
                    MinDis[i]=nNewLen;            //????????????
                }
            }
    }
    return MinDis[nDest];                        //????????????????
}

int main()
{
    int path[201],i,j;
    while(cin>>num)
    {
        memset(map,0,sizeof(map));
        for(i=0;i<num;i++)
            for(j=0;j<num;j++)
                cin>>map[i][j];
        int min=Dijkstra(map,0,num-1,path);
        cout<<min<<endl;
    }

    return 0;
}